generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Karyawan {
  nik                Int         @id
  namaKaryawan       String
  jabatan            String
  status             String      @default("AKTIF")
  nik_SPV            Int?
  nik_kabag          Int?
  nik_kacab          Int?
  nik_direkturBisnis Int?
  nik_direkturUtama  Int?
  id_kantor          Int
  createdAt          DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime?   @updatedAt @db.Timestamptz(6)
  kantor             Kantor      @relation(fields: [id_kantor], references: [id_kantor])
  supervisor         Karyawan?   @relation("Supervisor", fields: [nik_SPV], references: [nik])
  subordinates       Karyawan[]  @relation("Supervisor")
  direkturBisnis     Karyawan?   @relation("DirekturBisnis", fields: [nik_direkturBisnis], references: [nik])
  direkturBisnisSubs Karyawan[]  @relation("DirekturBisnis")
  kepalaBagian       Karyawan?   @relation("Kabag", fields: [nik_kabag], references: [nik])
  kepalaBagianSubs   Karyawan[]  @relation("Kabag")
  kepalaCabang       Karyawan?   @relation("Kacab", fields: [nik_kacab], references: [nik])
  kepalaCabangSubs   Karyawan[]  @relation("Kacab")
  direkturUtama     Karyawan?   @relation("DirekturUtama", fields: [nik_direkturUtama], references: [nik])
  direkturUtamaSubs Karyawan[]  @relation("DirekturUtama")
  nasabah            Nasabah[]   @relation("KaryawanNasabah")  // Relasi ke Nasabah
  user               User?       @relation("KaryawanUser")

  KreditPengajuan Kredit[] @relation(name: "KaryawanPengajuan")
  kreditSlik Kredit[] @relation(name: "KaryawanSlik")

  KreditAnalisis Kredit[] @relation(name: "KaryawanAnalisisSlik")

  KreditVisit Kredit[] @relation(name: "KaryawanVisitNasabah")

  KreditProposal Kredit[] @relation(name: "KaryawanProposalKredit")

  KreditSetuju1 Kredit[] @relation(name: "KaryawanPersetujuanSatu")

  KreditSetuju2 Kredit[] @relation(name: "KaryawanPersetujuanDua")

  KreditSetuju3 Kredit[] @relation(name: "KaryawanPersetujuanTiga")
}

model Kantor {
  id_kantor    Int        @id @default(autoincrement())
  jenis_kantor String
  createdAt    DateTime   @default(now()) @db.Timestamptz(6)
  karyawan     Karyawan[]
}

model User {
  id        Int      @id @default(autoincrement())
  nik       Int      @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  karyawan  Karyawan @relation("KaryawanUser", fields: [nik], references: [nik])
}

model Nasabah {
  id_nasabah            Int         @id @default(autoincrement())
  namaNasabah           String
  alamat                String
  no_telp               String
  namaUsaha             String
  nik                   Int
  desaKelurahanId       String
  karyawan              Karyawan    @relation("KaryawanNasabah", fields: [nik], references: [nik]) // Relasi ke Karyawan
  kunjungan             Kunjungan[]
  desa                  DesaKelurahan @relation("DesaNasabah", fields: [desaKelurahanId], references: [id]) // Relasi ke DesaKelurahan

  kredit Kredit[]
}

model Provinsi {
  id            String          @id @db.Char(2)
  nama          String          @db.VarChar(255)
  KabupatenKota KabupatenKota[] @relation("ProvinsiToKabupatenKota")
}

model KabupatenKota {
  id         String      @id @db.Char(4)
  provinsiId String      @db.Char(2)
  nama       String      @db.VarChar(255)
  Provinsi   Provinsi    @relation("ProvinsiToKabupatenKota", fields: [provinsiId], references: [id])
  Kecamatan  Kecamatan[] @relation("KabupatenKotaToKecamatan")
}

model Kecamatan {
  id              String          @id @db.Char(6)
  kabupatenKotaId String          @db.Char(4)
  nama            String          @db.VarChar(255)
  DesaKelurahan   DesaKelurahan[] @relation("KecamatanToDesaKelurahan")
  KabupatenKota   KabupatenKota   @relation("KabupatenKotaToKecamatan", fields: [kabupatenKotaId], references: [id])
}

model DesaKelurahan {
  id          String    @id @db.Char(10)
  kecamatanId String    @db.Char(6)
  nama        String    @db.VarChar(255)
  Kecamatan   Kecamatan @relation("KecamatanToDesaKelurahan", fields: [kecamatanId], references: [id])
  nasabah     Nasabah[] @relation("DesaNasabah")
}

model Kunjungan {
  id_kunjungan   Int      @id @default(autoincrement())
  id_nasabah     Int
  hasilKunjungan String
  foto_kunjungan String
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @updatedAt @db.Timestamptz(6)
  nasabah        Nasabah  @relation(fields: [id_nasabah], references: [id_nasabah])  // Relasi ke Nasabah
}

model Kredit {
  id_kredit           Int      @id @default(autoincrement())
  id_nasabah          Int
  nominal_pengajuan   Int
  tenor_pengajuan     Int

  // Langkah 1: Pengajuan Kredit
  status_pengajuan        String   @default("sedang_diajukan")
  id_karyawan_pengajuan   Int      
  karyawan_pengajuan      Karyawan @relation(fields: [id_karyawan_pengajuan], references: [nik], name: "KaryawanPengajuan")

  // Langkah 2: SLIK Check
  status_Slik            String   @default("belum_ditinjau")
  id_karyawan_slik       Int?     
  karyawan_slik          Karyawan? @relation(fields: [id_karyawan_slik], references: [nik], name: "KaryawanSlik")
  updatedAtSlik          DateTime @db.Timestamptz(6)

  // Langkah 3: Analisis SLIK
  status_analisisSlik         String   @default("belum_dianalisis")
  id_karyawan_analisisSlik    Int?     
  karyawan_analisisSlik       Karyawan? @relation(fields: [id_karyawan_analisisSlik], references: [nik], name: "KaryawanAnalisisSlik")
  updatedAtAnalisisSlik       DateTime  @db.Timestamptz(6)

  // Langkah 4: Visit Nasabah
  status_visitNasabah        String   @default("belum_dilakukan")
  id_karyawan_visitNasabah   Int?     
  karyawan_visitNasabah      Karyawan? @relation(fields: [id_karyawan_visitNasabah], references: [nik], name: "KaryawanVisitNasabah")
  updatedAtVisitNasabah      DateTime  @db.Timestamptz(6)

  // Langkah 5: Proposal Kredit
  status_proposalKredit        String   @default("belum_diajukan")
  id_karyawan_proposalKredit   Int?     
  karyawan_proposalKredit      Karyawan? @relation(fields: [id_karyawan_proposalKredit], references: [nik], name: "KaryawanProposalKredit")
  updatedAtProposalKredit      DateTime  @db.Timestamptz(6)

  // Langkah 6: Persetujuan 1
  status_persetujuansatu        String   @default("belum_disetujui")
  id_karyawan_persetujuansatu   Int?     
  karyawan_persetujuansatu      Karyawan? @relation(fields: [id_karyawan_persetujuansatu], references: [nik], name: "KaryawanPersetujuanSatu")
  updatedAtPersetujuansatu      DateTime  @db.Timestamptz(6)

  // Langkah 7: Persetujuan 2
  status_persetujuandua        String   @default("belum_disetujui")
  id_karyawan_persetujuandua   Int?     
  karyawan_persetujuandua      Karyawan? @relation(fields: [id_karyawan_persetujuandua], references: [nik], name: "KaryawanPersetujuanDua")
  updatedAtPersetujuandua      DateTime  @db.Timestamptz(6)

  // Langkah 8: Persetujuan 3
  status_persetujuantiga        String   @default("belum_disetujui")
  id_karyawan_persetujuantiga   Int?     
  karyawan_persetujuantiga      Karyawan? @relation(fields: [id_karyawan_persetujuantiga], references: [nik], name: "KaryawanPersetujuanTiga")
  updatedAtPersetujuantiga      DateTime  @db.Timestamptz(6)

  nominal_disetujui   Int? @default(0)
  tenor_disetujui     Int? @default(0)
  createdAt           DateTime @default(now()) @db.Timestamptz(6)

  // Relasi ke Nasabah
  nasabah             Nasabah  @relation(fields: [id_nasabah], references: [id_nasabah])

}
